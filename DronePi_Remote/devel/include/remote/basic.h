// Generated by gencpp from file remote/basic.msg
// DO NOT EDIT!


#ifndef REMOTE_MESSAGE_BASIC_H
#define REMOTE_MESSAGE_BASIC_H

#include <ros/service_traits.h>


#include <remote/basicRequest.h>
#include <remote/basicResponse.h>


namespace remote
{

struct basic
{

typedef basicRequest Request;
typedef basicResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct basic
} // namespace remote


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::remote::basic > {
  static const char* value()
  {
    return "bb80ece2e91b33ae008c863d1e34b34c";
  }

  static const char* value(const ::remote::basic&) { return value(); }
};

template<>
struct DataType< ::remote::basic > {
  static const char* value()
  {
    return "remote/basic";
  }

  static const char* value(const ::remote::basic&) { return value(); }
};


// service_traits::MD5Sum< ::remote::basicRequest> should match 
// service_traits::MD5Sum< ::remote::basic > 
template<>
struct MD5Sum< ::remote::basicRequest>
{
  static const char* value()
  {
    return MD5Sum< ::remote::basic >::value();
  }
  static const char* value(const ::remote::basicRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::remote::basicRequest> should match 
// service_traits::DataType< ::remote::basic > 
template<>
struct DataType< ::remote::basicRequest>
{
  static const char* value()
  {
    return DataType< ::remote::basic >::value();
  }
  static const char* value(const ::remote::basicRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::remote::basicResponse> should match 
// service_traits::MD5Sum< ::remote::basic > 
template<>
struct MD5Sum< ::remote::basicResponse>
{
  static const char* value()
  {
    return MD5Sum< ::remote::basic >::value();
  }
  static const char* value(const ::remote::basicResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::remote::basicResponse> should match 
// service_traits::DataType< ::remote::basic > 
template<>
struct DataType< ::remote::basicResponse>
{
  static const char* value()
  {
    return DataType< ::remote::basic >::value();
  }
  static const char* value(const ::remote::basicResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // REMOTE_MESSAGE_BASIC_H
